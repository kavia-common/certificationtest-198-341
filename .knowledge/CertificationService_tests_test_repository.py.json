{"is_source_file": true, "format": "Python", "description": "Test module for Certificate Workflow repository, including unit tests for workflow lifecycle, filtering, and duration calculations.", "external_files": ["src/api/models", "src/api/repository"], "external_methods": ["init_stage_results", "compute_overall_status"], "published": [], "classes": [{"name": "Workflow", "description": "Represents a certification workflow with stages, status, and metadata."}, {"name": "CertificationStage", "description": "Enum indicating different certification stages."}, {"name": "WorkflowStatus", "description": "Enum indicating overall workflow statuses."}, {"name": "StageResult", "description": "Stores results and timing for individual stages."}, {"name": "StageStatus", "description": "Enum indicating status of individual stage processing."}, {"name": "Domain", "description": "Enum representing domain classification of the workflow."}, {"name": "GitInfo", "description": "Contains version control metadata for the workflow."}], "methods": [{"name": "Workflow build_workflow( *, id_: str = \"wf-1\", domain: Domain = Domain.CORE, author: str | None = \"alice\", branch: str = \"main\", commit: str = \"abc123\", stages: list[CertificationStage] | None = None, metadata: dict[str, str] | None = None, )", "description": "Helper function to construct a Workflow object with default and custom parameters.", "scope": "", "scopeKind": ""}, {"name": "test_init_stage_results_sets_pending_for_all()", "description": "Test whether all initial stage results are set to pending.", "scope": "", "scopeKind": ""}, {"name": "test_compute_overall_status_transitions()", "description": "Test status transitions and overall status calculations.", "scope": "", "scopeKind": ""}, {"name": "test_repository_filters_by_fields()", "description": "Test if repository filtering works correctly by various criteria.", "scope": "", "scopeKind": ""}, {"name": "test_duration_computation_consistency()", "description": "Validate duration calculation logic for stage results.", "scope": "", "scopeKind": ""}], "calls": ["init_stage_results", "compute_overall_status", "Workflow", "WorkflowStatus.CREATED", "WorkflowStatus.RUNNING", "WorkflowStatus.PARTIAL", "WorkflowStatus.SUCCEEDED", "WorkflowStatus.FAILED", "Domain.CORE", "Domain.TRANSPORT", "CertificationStage.CODE_QUALITY", "CertificationStage.SECURITY", "StageStatus.PENDING", "StageStatus.RUNNING", "StageStatus.SUCCEEDED", "StageStatus.FAILED", "repo.create", "repo.list", "repo.update"], "search-terms": ["test_repository", "Workflow", "init_stage_results", "compute_overall_status", "CertificationStage", "StageResult", "StageStatus", "WorkflowStatus", "filtering", "duration_ms calculation"], "state": 2, "file_id": 11, "knowledge_revision": 32, "git_revision": "ee36d2e6f5fa8f901391e32cbd2d09e066d407bf", "revision_history": [{"26": ""}, {"32": "ee36d2e6f5fa8f901391e32cbd2d09e066d407bf"}], "ctags": [{"_type": "tag", "name": "build_workflow", "path": "/home/kavia/workspace/code-generation/certificationtest-198-341/CertificationService/tests/test_repository.py", "pattern": "/^def build_workflow($/", "language": "Python", "typeref": "typename:Workflow", "kind": "function", "signature": "( *, id_: str = \"wf-1\", domain: Domain = Domain.CORE, author: str | None = \"alice\", branch: str = \"main\", commit: str = \"abc123\", stages: list[CertificationStage] | None = None, metadata: dict[str, str] | None = None, )"}, {"_type": "tag", "name": "test_compute_overall_status_transitions", "path": "/home/kavia/workspace/code-generation/certificationtest-198-341/CertificationService/tests/test_repository.py", "pattern": "/^def test_compute_overall_status_transitions():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "test_duration_computation_consistency", "path": "/home/kavia/workspace/code-generation/certificationtest-198-341/CertificationService/tests/test_repository.py", "pattern": "/^def test_duration_computation_consistency():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "test_init_stage_results_sets_pending_for_all", "path": "/home/kavia/workspace/code-generation/certificationtest-198-341/CertificationService/tests/test_repository.py", "pattern": "/^def test_init_stage_results_sets_pending_for_all():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "test_repository_filters_by_fields", "path": "/home/kavia/workspace/code-generation/certificationtest-198-341/CertificationService/tests/test_repository.py", "pattern": "/^def test_repository_filters_by_fields():$/", "language": "Python", "kind": "function", "signature": "()"}], "hash": "f9a0d59f5c9ce4318f3906a6c693c201", "format-version": 4, "code-base-name": "CertificationService", "filename": "CertificationService/tests/test_repository.py"}