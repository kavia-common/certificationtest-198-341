{"is_source_file": true, "format": "Python", "description": "Test suite for CertificationService repository module, including functions to build workflows, test initialization, status computations, repository filtering, and duration calculations.", "external_files": ["src/api/models", "src/api/repository"], "external_methods": ["init_stage_results", "compute_overall_status"], "published": ["build_workflow", "test_init_stage_results_sets_pending_for_all", "test_compute_overall_status_transitions", "test_repository_filters_by_fields", "test_duration_computation_consistency"], "classes": [], "methods": [{"name": "Workflow build_workflow( *, id_: str = \"wf-1\", domain: Domain = Domain.CORE, author: str | None = \"alice\", branch: str = \"main\", commit: str = \"abc123\", stages: list[CertificationStage] | None = None, metadata: dict[str, str] | None = None, )", "description": "Creates a sample Workflow object with specified parameters for testing purposes.", "scope": "", "scopeKind": ""}, {"name": "test_init_stage_results_sets_pending_for_all()", "description": "Tests that the init_stage_results function initializes all stage results with a pending status.", "scope": "", "scopeKind": ""}, {"name": "test_compute_overall_status_transitions()", "description": "Verifies correct status computation for overall workflow based on individual stage statuses.", "scope": "", "scopeKind": ""}, {"name": "test_repository_filters_by_fields()", "description": "Ensures the repository's filtering methods work correctly based on various fields like domain, author, branch, commit, metadata, stage, and status.", "scope": "", "scopeKind": ""}, {"name": "test_duration_computation_consistency()", "description": "Checks that stage duration calculations are consistent and within expected bounds.", "scope": "", "scopeKind": ""}], "calls": ["init_stage_results", "compute_overall_status"], "search-terms": ["test_repository.py", "Workflow", "StageResult", "CertificationStage", "StageStatus", "InMemoryWorkflowRepository", "filter", "status", "duration", "build_workflow"], "state": 2, "file_id": 11, "knowledge_revision": 26, "git_revision": "", "ctags": [{"_type": "tag", "name": "build_workflow", "path": "/home/kavia/workspace/code-generation/certificationtest-198-341/CertificationService/tests/test_repository.py", "pattern": "/^def build_workflow($/", "language": "Python", "typeref": "typename:Workflow", "kind": "function", "signature": "( *, id_: str = \"wf-1\", domain: Domain = Domain.CORE, author: str | None = \"alice\", branch: str = \"main\", commit: str = \"abc123\", stages: list[CertificationStage] | None = None, metadata: dict[str, str] | None = None, )"}, {"_type": "tag", "name": "test_compute_overall_status_transitions", "path": "/home/kavia/workspace/code-generation/certificationtest-198-341/CertificationService/tests/test_repository.py", "pattern": "/^def test_compute_overall_status_transitions():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "test_duration_computation_consistency", "path": "/home/kavia/workspace/code-generation/certificationtest-198-341/CertificationService/tests/test_repository.py", "pattern": "/^def test_duration_computation_consistency():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "test_init_stage_results_sets_pending_for_all", "path": "/home/kavia/workspace/code-generation/certificationtest-198-341/CertificationService/tests/test_repository.py", "pattern": "/^def test_init_stage_results_sets_pending_for_all():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "test_repository_filters_by_fields", "path": "/home/kavia/workspace/code-generation/certificationtest-198-341/CertificationService/tests/test_repository.py", "pattern": "/^def test_repository_filters_by_fields():$/", "language": "Python", "kind": "function", "signature": "()"}], "hash": "59eaedcb03e53105d29c0860f3e8715e", "format-version": 4, "code-base-name": "CertificationService", "filename": "CertificationService/tests/test_repository.py", "revision_history": [{"26": ""}]}