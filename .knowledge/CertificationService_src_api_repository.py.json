{"is_source_file": true, "format": "Python", "description": "This file defines a thread-safe in-memory repository class for managing Workflow objects, including methods for creating, retrieving, updating, and listing workflows with various filtering options. It also contains helper functions and constants related to workflow stages and statuses.", "external_files": ["./models"], "external_methods": ["uuid.uuid4", "datetime.utcnow"], "published": ["InMemoryWorkflowRepository", "new_workflow_id", "init_stage_results", "compute_overall_status"], "classes": [{"name": "InMemoryWorkflowRepository", "description": "A thread-safe in-memory repository class for storing and managing Workflow objects, supporting CRUD operations and filtered listing."}], "methods": [{"name": "None __init__(self)", "description": "Initializes the repository with an empty store and a reentrant lock.", "scope": "InMemoryWorkflowRepository", "scopeKind": "class"}, {"name": "datetime _now(self)", "description": "Returns the current UTC datetime.", "scope": "InMemoryWorkflowRepository", "scopeKind": "class"}, {"name": "Workflow create(self, wf: Workflow)", "description": "Stores a new Workflow object and returns it.", "scope": "InMemoryWorkflowRepository", "scopeKind": "class"}, {"name": "Optional[Workflow] get(self, workflow_id: str)", "description": "Retrieves a Workflow by its ID, or None if not found.", "scope": "InMemoryWorkflowRepository", "scopeKind": "class"}, {"name": "Workflow update(self, wf: Workflow)", "description": "Updates an existing Workflow in the repository.", "scope": "InMemoryWorkflowRepository", "scopeKind": "class"}, {"name": "List[Workflow] list( self, *, script_path: Optional[str] = None, domain: Optional[Domain] = None, author: Optional[str] = None, branch: Optional[str] = None, commit: Optional[str] = None, stage: Optional[CertificationStage] = None, status: Optional[str] = None, limit: int = 50, offset: int = 0, )", "description": "Returns a list of Workflows filtered by optional criteria such as domain, author, branch, commit, stage, status, etc.", "scope": "InMemoryWorkflowRepository", "scopeKind": "class"}, {"name": "WorkflowStatus compute_overall_status(results: Dict[str, StageResult])", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "Dict[str,StageResult] init_stage_results(stages: List[CertificationStage])", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "bool match(w: Workflow)", "scope": "InMemoryWorkflowRepository.list", "scopeKind": "member", "description": "unavailable"}, {"name": "str new_workflow_id()", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["threading.RLock", "self._lock", "self._by_id.get", "datetime.utcnow", "self._lock", "self._by_id[wf.id]", "self._lock", "self._by_id[wf.id]", "self._lock", "list(self._by_id.values())"], "search-terms": ["InMemoryWorkflowRepository", "thread-safe repository", "Workflow store", "list workflows with filters", "repository pattern in Python"], "state": 2, "file_id": 6, "knowledge_revision": 19, "git_revision": "", "revision_history": [{"12": ""}, {"19": ""}], "ctags": [{"_type": "tag", "name": "DEFAULT_STAGES_BY_DOMAIN", "path": "/home/kavia/workspace/code-generation/certificationtest-198-341/CertificationService/src/api/repository.py", "pattern": "/^DEFAULT_STAGES_BY_DOMAIN: Dict[Domain, List[CertificationStage]] = {$/", "language": "Python", "typeref": "typename:Dict[Domain, List[CertificationStage]]", "kind": "variable"}, {"_type": "tag", "name": "InMemoryWorkflowRepository", "path": "/home/kavia/workspace/code-generation/certificationtest-198-341/CertificationService/src/api/repository.py", "pattern": "/^class InMemoryWorkflowRepository:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/certificationtest-198-341/CertificationService/src/api/repository.py", "pattern": "/^    def __init__(self) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self)", "scope": "InMemoryWorkflowRepository", "scopeKind": "class"}, {"_type": "tag", "name": "_now", "path": "/home/kavia/workspace/code-generation/certificationtest-198-341/CertificationService/src/api/repository.py", "pattern": "/^    def _now(self) -> datetime:$/", "language": "Python", "typeref": "typename:datetime", "kind": "member", "signature": "(self)", "scope": "InMemoryWorkflowRepository", "scopeKind": "class"}, {"_type": "tag", "name": "compute_overall_status", "path": "/home/kavia/workspace/code-generation/certificationtest-198-341/CertificationService/src/api/repository.py", "pattern": "/^def compute_overall_status(results: Dict[str, StageResult]) -> WorkflowStatus:$/", "language": "Python", "typeref": "typename:WorkflowStatus", "kind": "function", "signature": "(results: Dict[str, StageResult])"}, {"_type": "tag", "name": "create", "path": "/home/kavia/workspace/code-generation/certificationtest-198-341/CertificationService/src/api/repository.py", "pattern": "/^    def create(self, wf: Workflow) -> Workflow:$/", "language": "Python", "typeref": "typename:Workflow", "kind": "member", "signature": "(self, wf: Workflow)", "scope": "InMemoryWorkflowRepository", "scopeKind": "class"}, {"_type": "tag", "name": "get", "path": "/home/kavia/workspace/code-generation/certificationtest-198-341/CertificationService/src/api/repository.py", "pattern": "/^    def get(self, workflow_id: str) -> Optional[Workflow]:$/", "language": "Python", "typeref": "typename:Optional[Workflow]", "kind": "member", "signature": "(self, workflow_id: str)", "scope": "InMemoryWorkflowRepository", "scopeKind": "class"}, {"_type": "tag", "name": "init_stage_results", "path": "/home/kavia/workspace/code-generation/certificationtest-198-341/CertificationService/src/api/repository.py", "pattern": "/^def init_stage_results(stages: List[CertificationStage]) -> Dict[str, StageResult]:$/", "language": "Python", "typeref": "typename:Dict[str,StageResult]", "kind": "function", "signature": "(stages: List[CertificationStage])"}, {"_type": "tag", "name": "list", "path": "/home/kavia/workspace/code-generation/certificationtest-198-341/CertificationService/src/api/repository.py", "pattern": "/^    def list($/", "language": "Python", "typeref": "typename:List[Workflow]", "kind": "member", "signature": "( self, *, script_path: Optional[str] = None, domain: Optional[Domain] = None, author: Optional[str] = None, branch: Optional[str] = None, commit: Optional[str] = None, stage: Optional[CertificationStage] = None, status: Optional[str] = None, limit: int = 50, offset: int = 0, )", "scope": "InMemoryWorkflowRepository", "scopeKind": "class"}, {"_type": "tag", "name": "match", "path": "/home/kavia/workspace/code-generation/certificationtest-198-341/CertificationService/src/api/repository.py", "pattern": "/^        def match(w: Workflow) -> bool:$/", "file": true, "language": "Python", "typeref": "typename:bool", "kind": "function", "signature": "(w: Workflow)", "scope": "InMemoryWorkflowRepository.list", "scopeKind": "member"}, {"_type": "tag", "name": "new_workflow_id", "path": "/home/kavia/workspace/code-generation/certificationtest-198-341/CertificationService/src/api/repository.py", "pattern": "/^def new_workflow_id() -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "update", "path": "/home/kavia/workspace/code-generation/certificationtest-198-341/CertificationService/src/api/repository.py", "pattern": "/^    def update(self, wf: Workflow) -> Workflow:$/", "language": "Python", "typeref": "typename:Workflow", "kind": "member", "signature": "(self, wf: Workflow)", "scope": "InMemoryWorkflowRepository", "scopeKind": "class"}], "hash": "30e627f5cdecd8afe012fb7109d78c54", "format-version": 4, "code-base-name": "CertificationService", "filename": "CertificationService/src/api/repository.py", "fields": [{"name": "Dict[Domain, List[CertificationStage]] DEFAULT_STAGES_BY_DOMAIN", "scope": "", "scopeKind": "", "description": "unavailable"}]}