{"is_source_file": true, "format": "Python", "description": "This is a test configuration file for pytest, defining fixtures and dummy classes for testing the CertificationWorkflowService and related components.", "external_files": ["src/api/repository", "src/api/service"], "external_methods": ["pytest.fixture", "asyncio.new_event_loop", "asyncio.sleep"], "published": [], "classes": [{"name": "DummyExecClient", "description": "A dummy implementation of ExecutionServiceClient used for testing, providing a mock trigger_stage method."}, {"name": "DummyNotifier", "description": "A dummy implementation of NotificationClient used for testing, recording messages sent to it."}], "methods": [{"name": "anyio_backend()", "description": "Fixture to set the async backend to 'asyncio'.", "scope": "", "scopeKind": ""}, {"name": "Generator[asyncio.AbstractEventLoop,None,None] event_loop()", "description": "Fixture to create and manage a session-scoped asyncio event loop for running async tests.", "scope": "", "scopeKind": ""}, {"name": "InMemoryWorkflowRepository repo()", "description": "Fixture providing an in-memory workflow repository instance.", "scope": "", "scopeKind": ""}, {"name": "DummyExecClient exec_client()", "description": "Fixture providing an instance of the dummy execution client.", "scope": "", "scopeKind": ""}, {"name": "DummyNotifier notifier()", "description": "Fixture providing an instance of the dummy notifier.", "scope": "", "scopeKind": ""}, {"name": "CertificationWorkflowService service(repo, exec_client, notifier)", "description": "Fixture providing an instance of the CertificationWorkflowService with dependencies injected.", "scope": "", "scopeKind": ""}, {"name": "__init__(self)", "scope": "DummyNotifier", "scopeKind": "class", "description": "unavailable"}, {"name": "None notify(self, config, message: str)", "scope": "DummyNotifier", "scopeKind": "class", "description": "unavailable"}, {"name": "str trigger_stage(self, workflow_id, stage, git, metadata)", "scope": "DummyExecClient", "scopeKind": "class", "description": "unavailable"}], "calls": ["asyncio.new_event_loop", "asyncio.sleep", "loop.close()"], "search-terms": ["pytest fixtures", "conftest.py", "dummy execution client", "asyncio event loop", "pytest-asyncio", "CertificationWorkflowService"], "state": 2, "file_id": 10, "knowledge_revision": 31, "git_revision": "", "revision_history": [{"24": ""}, {"31": ""}], "ctags": [{"_type": "tag", "name": "DummyExecClient", "path": "/home/kavia/workspace/code-generation/certificationtest-198-341/CertificationService/tests/conftest.py", "pattern": "/^class DummyExecClient(ExecutionServiceClient):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "DummyNotifier", "path": "/home/kavia/workspace/code-generation/certificationtest-198-341/CertificationService/tests/conftest.py", "pattern": "/^class DummyNotifier(NotificationClient):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/certificationtest-198-341/CertificationService/tests/conftest.py", "pattern": "/^    def __init__(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "DummyExecClient", "scopeKind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/certificationtest-198-341/CertificationService/tests/conftest.py", "pattern": "/^    def __init__(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "DummyNotifier", "scopeKind": "class"}, {"_type": "tag", "name": "anyio_backend", "path": "/home/kavia/workspace/code-generation/certificationtest-198-341/CertificationService/tests/conftest.py", "pattern": "/^def anyio_backend():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "event_loop", "path": "/home/kavia/workspace/code-generation/certificationtest-198-341/CertificationService/tests/conftest.py", "pattern": "/^def event_loop() -> Generator[asyncio.AbstractEventLoop, None, None]:$/", "language": "Python", "typeref": "typename:Generator[asyncio.AbstractEventLoop,None,None]", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "exec_client", "path": "/home/kavia/workspace/code-generation/certificationtest-198-341/CertificationService/tests/conftest.py", "pattern": "/^def exec_client() -> DummyExecClient:$/", "language": "Python", "typeref": "typename:DummyExecClient", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "notifier", "path": "/home/kavia/workspace/code-generation/certificationtest-198-341/CertificationService/tests/conftest.py", "pattern": "/^def notifier() -> DummyNotifier:$/", "language": "Python", "typeref": "typename:DummyNotifier", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "notify", "path": "/home/kavia/workspace/code-generation/certificationtest-198-341/CertificationService/tests/conftest.py", "pattern": "/^    async def notify(self, config, message: str) -> None:  # type: ignore[override]$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self, config, message: str)", "scope": "DummyNotifier", "scopeKind": "class"}, {"_type": "tag", "name": "repo", "path": "/home/kavia/workspace/code-generation/certificationtest-198-341/CertificationService/tests/conftest.py", "pattern": "/^def repo() -> InMemoryWorkflowRepository:$/", "language": "Python", "typeref": "typename:InMemoryWorkflowRepository", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "service", "path": "/home/kavia/workspace/code-generation/certificationtest-198-341/CertificationService/tests/conftest.py", "pattern": "/^def service(repo, exec_client, notifier) -> CertificationWorkflowService:$/", "language": "Python", "typeref": "typename:CertificationWorkflowService", "kind": "function", "signature": "(repo, exec_client, notifier)"}, {"_type": "tag", "name": "trigger_stage", "path": "/home/kavia/workspace/code-generation/certificationtest-198-341/CertificationService/tests/conftest.py", "pattern": "/^    async def trigger_stage(self, workflow_id, stage, git, metadata) -> str:  # type: ignore[ove/", "language": "Python", "typeref": "typename:str", "kind": "member", "signature": "(self, workflow_id, stage, git, metadata)", "scope": "DummyExecClient", "scopeKind": "class"}], "hash": "bf524d50d2a313779d7530bd985d712f", "format-version": 4, "code-base-name": "CertificationService", "filename": "CertificationService/tests/conftest.py"}