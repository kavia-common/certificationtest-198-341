{"is_source_file": true, "format": "Python", "description": "This file implements the core services for managing and orchestrating the certification workflow, including external communication with execution and notification services, workflow creation, status updates, and retrieval.", "external_files": ["./models", "./repository"], "external_methods": ["compute_overall_status", "init_stage_results", "new_workflow_id"], "published": ["ExecutionServiceClient", "NotificationClient", "CertificationWorkflowService"], "classes": [{"name": "ExecutionServiceClient", "description": "A client to communicate with the external execution service, triggering stage executions asynchronously."}, {"name": "NotificationClient", "description": "A stub client for sending notifications via webhook, email, or Slack."}, {"name": "CertificationWorkflowService", "description": "Main service orchestrating the certification workflows, including creation, updating, and status management."}], "methods": [{"name": "str trigger_stage( self, workflow_id: str, stage: CertificationStage, git: GitInfo, metadata: Dict[str, str], )", "description": "Asynchronously triggers a stage execution via external execution service, returning an executor reference id.", "scope": "ExecutionServiceClient", "scopeKind": "class"}, {"name": "None notify(self, config: Optional[NotificationConfig], message: str)", "description": "Sends a notification message based on provided configuration.", "scope": "NotificationClient", "scopeKind": "class"}, {"name": "Workflow create_workflow(self, req: WorkflowCreateRequest)", "description": "Creates a new certification workflow, initializes stages, and triggers stage executions.", "scope": "CertificationWorkflowService", "scopeKind": "class"}, {"name": "None _kickoff_stages(self, workflow_id: str)", "description": "Internal method to sequentially trigger stages and handle their completion status.", "scope": "CertificationWorkflowService", "scopeKind": "class"}, {"name": "Optional[Workflow] get_workflow(self, workflow_id: str)", "description": "Retrieves a workflow by its ID.", "scope": "CertificationWorkflowService", "scopeKind": "class"}, {"name": "List[Workflow] list_workflows( self, *, script_path: Optional[str] = None, domain: Optional[str] = None, author: Optional[str] = None, branch: Optional[str] = None, commit: Optional[str] = None, stage: Optional[str] = None, status: Optional[str] = None, limit: int = 50, offset: int = 0, )", "description": "Lists workflows based on various filter criteria.", "scope": "CertificationWorkflowService", "scopeKind": "class"}, {"name": "Optional[Workflow] update_stage_status( self, workflow_id: str, req: WorkflowUpdateStatusRequest )", "description": "Updates the status of a specific stage within a workflow, typically via callback from execution service.", "scope": "CertificationWorkflowService", "scopeKind": "class"}, {"name": "__init__( self, repo: InMemoryWorkflowRepository, exec_client: ExecutionServiceClient, notifier: NotificationClient, )", "scope": "CertificationWorkflowService", "scopeKind": "class", "description": "unavailable"}, {"name": "None __init__(self, base_url: Optional[str] = None, timeout: float = 10.0)", "scope": "ExecutionServiceClient", "scopeKind": "class", "description": "unavailable"}], "calls": ["asyncio.sleep", "self.repo.create", "self.repo.get", "self.repo.update", "compute_overall_status", "init_stage_results", "new_workflow_id", "self.notifier.notify", "self.exec_client.trigger_stage"], "search-terms": ["CertificationWorkflowService", "trigger_stage", "update_stage_status", "create_workflow", "notifier", "execution service", "workflow orchestration", "stage results"], "state": 2, "file_id": 7, "knowledge_revision": 22, "git_revision": "43dd74ec4dcc789d621f2ccd39db936875f3a69a", "revision_history": [{"14": ""}, {"20": ""}, {"21": ""}, {"22": "43dd74ec4dcc789d621f2ccd39db936875f3a69a"}], "ctags": [{"_type": "tag", "name": "CertificationWorkflowService", "path": "/home/kavia/workspace/code-generation/certificationtest-198-341/CertificationService/src/api/service.py", "pattern": "/^class CertificationWorkflowService:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "ExecutionServiceClient", "path": "/home/kavia/workspace/code-generation/certificationtest-198-341/CertificationService/src/api/service.py", "pattern": "/^class ExecutionServiceClient:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "NotificationClient", "path": "/home/kavia/workspace/code-generation/certificationtest-198-341/CertificationService/src/api/service.py", "pattern": "/^class NotificationClient:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "StageEnum", "path": "/home/kavia/workspace/code-generation/certificationtest-198-341/CertificationService/src/api/service.py", "pattern": "/^            from .models import CertificationStage as StageEnum$/", "file": true, "language": "Python", "kind": "unknown", "scope": "CertificationWorkflowService.list_workflows", "scopeKind": "member", "nameref": "unknown:CertificationStage"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/certificationtest-198-341/CertificationService/src/api/service.py", "pattern": "/^    def __init__($/", "language": "Python", "kind": "member", "signature": "( self, repo: InMemoryWorkflowRepository, exec_client: ExecutionServiceClient, notifier: NotificationClient, )", "scope": "CertificationWorkflowService", "scopeKind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/certificationtest-198-341/CertificationService/src/api/service.py", "pattern": "/^    def __init__(self, base_url: Optional[str] = None, timeout: float = 10.0) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self, base_url: Optional[str] = None, timeout: float = 10.0)", "scope": "ExecutionServiceClient", "scopeKind": "class"}, {"_type": "tag", "name": "_kickoff_stages", "path": "/home/kavia/workspace/code-generation/certificationtest-198-341/CertificationService/src/api/service.py", "pattern": "/^    async def _kickoff_stages(self, workflow_id: str) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self, workflow_id: str)", "scope": "CertificationWorkflowService", "scopeKind": "class"}, {"_type": "tag", "name": "create_workflow", "path": "/home/kavia/workspace/code-generation/certificationtest-198-341/CertificationService/src/api/service.py", "pattern": "/^    async def create_workflow(self, req: WorkflowCreateRequest) -> Workflow:$/", "language": "Python", "typeref": "typename:Workflow", "kind": "member", "signature": "(self, req: WorkflowCreateRequest)", "scope": "CertificationWorkflowService", "scopeKind": "class"}, {"_type": "tag", "name": "get_workflow", "path": "/home/kavia/workspace/code-generation/certificationtest-198-341/CertificationService/src/api/service.py", "pattern": "/^    def get_workflow(self, workflow_id: str) -> Optional[Workflow]:$/", "language": "Python", "typeref": "typename:Optional[Workflow]", "kind": "member", "signature": "(self, workflow_id: str)", "scope": "CertificationWorkflowService", "scopeKind": "class"}, {"_type": "tag", "name": "list_workflows", "path": "/home/kavia/workspace/code-generation/certificationtest-198-341/CertificationService/src/api/service.py", "pattern": "/^    def list_workflows($/", "language": "Python", "typeref": "typename:List[Workflow]", "kind": "member", "signature": "( self, *, script_path: Optional[str] = None, domain: Optional[str] = None, author: Optional[str] = None, branch: Optional[str] = None, commit: Optional[str] = None, stage: Optional[str] = None, status: Optional[str] = None, limit: int = 50, offset: int = 0, )", "scope": "CertificationWorkflowService", "scopeKind": "class"}, {"_type": "tag", "name": "notify", "path": "/home/kavia/workspace/code-generation/certificationtest-198-341/CertificationService/src/api/service.py", "pattern": "/^    async def notify(self, config: Optional[NotificationConfig], message: str) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self, config: Optional[NotificationConfig], message: str)", "scope": "NotificationClient", "scopeKind": "class"}, {"_type": "tag", "name": "trigger_stage", "path": "/home/kavia/workspace/code-generation/certificationtest-198-341/CertificationService/src/api/service.py", "pattern": "/^    async def trigger_stage($/", "language": "Python", "typeref": "typename:str", "kind": "member", "signature": "( self, workflow_id: str, stage: CertificationStage, git: GitInfo, metadata: Dict[str, str], )", "scope": "ExecutionServiceClient", "scopeKind": "class"}, {"_type": "tag", "name": "update_stage_status", "path": "/home/kavia/workspace/code-generation/certificationtest-198-341/CertificationService/src/api/service.py", "pattern": "/^    def update_stage_status($/", "language": "Python", "typeref": "typename:Optional[Workflow]", "kind": "member", "signature": "( self, workflow_id: str, req: WorkflowUpdateStatusRequest )", "scope": "CertificationWorkflowService", "scopeKind": "class"}], "hash": "f2dccf2e8f0267a625af8048329c7f14", "format-version": 4, "code-base-name": "CertificationService", "filename": "CertificationService/src/api/service.py"}